#version 430

struct Particle {
    vec3 Position;
    vec3 PredictedPosition;
    vec3 Velocity;
    vec3 PressureAcceleration;

    float density;
    float pressure;

    uint Gridhash;
};

layout(std430, binding = 0) buffer ParticleBuffer {
    Particle particles[];
};

layout(std430, binding = 1) buffer HashLookupBuffer {
    int hashLookUpTable[];
};

layout(location = 0) uniform int numParticles;

layout(local_size_x = 704) in;

void main() {
    uint i = gl_GlobalInvocationID.x;

    if (i >= int(numParticles)) return;

    uint nullVal = numParticles;
    uint key = particles[i].Gridhash;
    uint keyPrev = i == 0 ? nullVal : particles[i - 1].Gridhash;

    if (key != keyPrev) {
        hashLookUpTable[key] = int(i);
    }
}
